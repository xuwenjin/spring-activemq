<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:amq="http://activemq.apache.org/schema/core"
	xmlns:jms="http://www.springframework.org/schema/jms" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
        http://www.springframework.org/schema/jms
        http://www.springframework.org/schema/jms/spring-jms-4.1.xsd
        http://activemq.apache.org/schema/core
        http://activemq.apache.org/schema/core/activemq-core-5.12.1.xsd">

	<!-- 包扫描 -->
	<context:component-scan base-package="com.xwj" />

	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath:application.properties" />

	<amq:connectionFactory id="amqConnectionFactory"
		brokerURL="${activemq.url}" userName="${activemq.username}" password="${activemq.password}" />

	<!-- spring jms提供的连接池 -->
	<bean id="connectionFactory"
		class="org.springframework.jms.connection.CachingConnectionFactory">
		<constructor-arg ref="amqConnectionFactory" />
		<property name="sessionCacheSize" value="100" />
	</bean>

	<!-- 创建一个队列目的地，点对点 -->
	<bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<!-- 队列名称 -->
		<constructor-arg value="queue" />
	</bean>
	<!-- 创建一个主题目的地，发布订阅模式 -->
	<bean id="topicDestination" class="org.apache.activemq.command.ActiveMQTopic">
		<!-- 主题名称 -->
		<constructor-arg value="topic" />
	</bean>

	<!-- 配置JMS模板（Queue），Spring提供的JMS工具类，它发送、接收消息 -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="defaultDestination" ref="queueDestination" />
		<property name="receiveTimeout" value="10000" />
	</bean>

	<!-- 配置消息队列监听者（Queue） -->
	<bean id="queueMessageListener" class="com.xwj.listener.QueueMessageListener" />

	<!-- 注入消息监听容器（Queue），配置连接工厂，监听的目标是queueDestination，监听器是上面定义的监听器 -->
	<!-- DefaultMessageListenerContainer是一个用于异步消息监听的管理类。最简单的实现逻辑，一个任务执行器，执行任务（即消息监听） -->
	<bean id="queueListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="topicDestination" />
		<property name="messageListener" ref="queueMessageListener" />
	</bean>

</beans>